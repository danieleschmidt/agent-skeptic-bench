apiVersion: v1
kind: Namespace
metadata:
  name: agent-skeptic-bench
  labels:
    app.kubernetes.io/name: agent-skeptic-bench
    app.kubernetes.io/version: "2.0"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge-gateway
  namespace: agent-skeptic-bench
  labels:
    app: edge-gateway
    tier: api
    version: v2.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: edge-gateway
  template:
    metadata:
      labels:
        app: edge-gateway
        tier: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: edge-gateway
        image: agent-skeptic-bench:edge-gateway-latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: ENVIRONMENT
          value: "edge-kubernetes"
        - name: EDGE_REGION
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['topology.kubernetes.io/region']
        - name: EDGE_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: FEDERATION_ENABLED
          value: "true"
        - name: QUANTUM_OPTIMIZATION_ENABLED
          value: "true"
        - name: MULTIMODAL_PROCESSING_ENABLED
          value: "true"
        - name: AI_THREAT_DETECTION_ENABLED
          value: "true"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: app-config
          mountPath: /app/config
        - name: edge-models
          mountPath: /app/models
      volumes:
      - name: app-config
        configMap:
          name: edge-config
      - name: edge-models
        persistentVolumeClaim:
          claimName: edge-models-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: edge-gateway-service
  namespace: agent-skeptic-bench
  labels:
    app: edge-gateway
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: edge-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge-evaluator
  namespace: agent-skeptic-bench
  labels:
    app: edge-evaluator
    tier: compute
    version: v2.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  selector:
    matchLabels:
      app: edge-evaluator
  template:
    metadata:
      labels:
        app: edge-evaluator
        tier: compute
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - edge-evaluator
              topologyKey: kubernetes.io/hostname
      containers:
      - name: edge-evaluator
        image: agent-skeptic-bench:edge-evaluator-latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: ENVIRONMENT
          value: "edge-kubernetes"
        - name: EVALUATOR_MODE
          value: "distributed"
        - name: QUANTUM_POPULATION_SIZE
          value: "50"
        - name: QUANTUM_GENERATIONS
          value: "100"
        - name: QUANTUM_COHERENCE_THRESHOLD
          value: "0.85"
        - name: MULTIMODAL_VALIDATION_ENABLED
          value: "true"
        - name: AI_THREAT_DETECTION_ENABLED
          value: "true"
        - name: FEDERATED_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 2
        volumeMounts:
        - name: edge-models
          mountPath: /app/models
        - name: edge-cache
          mountPath: /app/cache
      volumes:
      - name: edge-models
        persistentVolumeClaim:
          claimName: edge-models-pvc
      - name: edge-cache
        emptyDir:
          sizeLimit: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: edge-evaluator-service
  namespace: agent-skeptic-bench
  labels:
    app: edge-evaluator
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: edge-evaluator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edge-coordinator
  namespace: agent-skeptic-bench
  labels:
    app: edge-coordinator
    tier: federation
    version: v2.0
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: edge-coordinator
  template:
    metadata:
      labels:
        app: edge-coordinator
        tier: federation
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9080"
    spec:
      containers:
      - name: edge-coordinator
        image: agent-skeptic-bench:edge-coordinator-latest
        ports:
        - containerPort: 9080
          name: http
        - containerPort: 9081
          name: federation
        env:
        - name: ENVIRONMENT
          value: "edge-kubernetes"
        - name: COORDINATOR_MODE
          value: "edge"
        - name: FEDERATION_PROTOCOL
          value: "quantum_secure"
        - name: DIFFERENTIAL_PRIVACY_EPSILON
          value: "1.0"
        - name: SECURE_AGGREGATION_ENABLED
          value: "true"
        - name: MIN_NODES_FOR_UPDATE
          value: "2"
        - name: MAX_NODES_PER_FEDERATION
          value: "100"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 9080
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 9080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
        volumeMounts:
        - name: edge-federation
          mountPath: /app/federation
      volumes:
      - name: edge-federation
        persistentVolumeClaim:
          claimName: edge-federation-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: edge-coordinator-service
  namespace: agent-skeptic-bench
  labels:
    app: edge-coordinator
spec:
  type: ClusterIP
  ports:
  - port: 9080
    targetPort: 9080
    protocol: TCP
    name: http
  - port: 9081
    targetPort: 9081
    protocol: TCP
    name: federation
  selector:
    app: edge-coordinator
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: edge-gateway-hpa
  namespace: agent-skeptic-bench
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: edge-gateway
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: quantum_coherence_level
      target:
        type: AverageValue
        averageValue: "850m"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: edge-evaluator-hpa
  namespace: agent-skeptic-bench
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: edge-evaluator
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  - type: Pods
    pods:
      metric:
        name: evaluation_queue_length
      target:
        type: AverageValue
        averageValue: "10"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 180
      policies:
      - type: Percent
        value: 20
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: edge-models-pvc
  namespace: agent-skeptic-bench
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: edge-federation-pvc
  namespace: agent-skeptic-bench
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: edge-config
  namespace: agent-skeptic-bench
data:
  edge.yaml: |
    edge:
      region: us-east-1
      optimization:
        quantum:
          enabled: true
          population_size: 50
          generations: 100
          coherence_threshold: 0.85
        federation:
          enabled: true
          differential_privacy_epsilon: 1.0
          secure_aggregation: true
          min_nodes: 2
          max_nodes: 100
        security:
          ai_threat_detection: true
          multimodal_validation: true
          real_time_scanning: true
          quarantine_enabled: true
      performance:
        caching:
          enabled: true
          ttl: 1800
          backend: distributed
        auto_scaling:
          enabled: true
          strategy: quantum_adaptive
          min_replicas: 1
          max_replicas: 20
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: edge-ingress
  namespace: agent-skeptic-bench
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/cors-enable: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - api.agent-skeptic-bench.org
    secretName: edge-tls-secret
  rules:
  - host: api.agent-skeptic-bench.org
    http:
      paths:
      - path: /api/(.*)
        pathType: Prefix
        backend:
          service:
            name: edge-gateway-service
            port:
              number: 80
      - path: /federation/(.*)
        pathType: Prefix
        backend:
          service:
            name: edge-coordinator-service
            port:
              number: 9080
---
apiVersion: v1
kind: Service
metadata:
  name: edge-lb-service
  namespace: agent-skeptic-bench
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app: edge-gateway