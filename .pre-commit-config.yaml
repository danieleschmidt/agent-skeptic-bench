repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-toml
      - id: debug-statements
      - id: detect-private-key
      - id: check-ast
      - id: check-builtin-literals
      - id: check-docstring-first

  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black", "--line-length=88"]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.6
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.7.1
    hooks:
      - id: mypy
        additional_dependencies: [
          types-requests,
          types-redis,
          types-PyYAML,
          pydantic
        ]
        args: [--ignore-missing-imports, --strict]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [
          -r, src/,
          -f, json,
          -o, bandit-report.json,
          --skip, B101,B601
        ]
        additional_dependencies: ["bandit[toml]"]

  - repo: https://github.com/PyCQA/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        additional_dependencies: [
          flake8-docstrings,
          flake8-import-order,
          flake8-bugbear,
          flake8-annotations
        ]
        args: [--max-line-length=88, --extend-ignore=E203,W503]

  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        additional_dependencies: [tomli]

  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        args: [--json, --output, safety-report.json]

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package.lock.json

  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        types_or: [yaml, json, markdown]
        exclude: ^(\.vscode/|docs/.*\.md)$

  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 3.0.0
    hooks:
      - id: shfmt
        args: [-i, "2", -ci]
      - id: shellcheck

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.12.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  - repo: local
    hooks:
      - id: pytest-check
        name: pytest-check
        entry: pytest
        language: system
        pass_filenames: false
        always_run: true
        args: [tests/unit/, --co, -q]
        stages: [push]

      - id: vulnerability-scan
        name: security vulnerability scan
        entry: bash -c 'semgrep --config=auto --json --output=semgrep-report.json src/ || true'
        language: system
        pass_filenames: false
        always_run: true
        stages: [push]

      - id: docker-security-scan
        name: docker security scan
        entry: bash -c 'if [ -f Dockerfile ]; then docker run --rm -v "$PWD":/app -w /app aquasec/trivy:latest fs --format json --output trivy-report.json . || true; fi'
        language: system
        pass_filenames: false
        stages: [manual]

# Configuration for specific hooks
default_language_version:
  python: python3.11

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [pytest-check, vulnerability-scan, docker-security-scan]
  submodules: false